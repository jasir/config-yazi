# yazi.toml
[mgr]
# show_hidden = true
ratio = [1,3,4]

[preview.mime_rules]

[preview]
ext_rules = [
 { ext = "md", mime = "text/markdown" }
]

[plugin]
# ASCII art image preview - force use of text-based image viewers
prepend_previewers = [
	# HTML files - clean text output (keep custom)
	{ mime = "text/html", run = 'piper -- w3m -dump "$1" 2>/dev/null || lynx -dump "$1" 2>/dev/null || cat "$1"' },
	
	# Binary executable files - file info summary
	{ mime = "application/x-executable", run = 'piper -- file -b "$1"' },
	{ mime = "application/x-sharedlib", run = 'piper -- file -b "$1"' },
	{ mime = "application/x-pie-executable", run = 'piper -- file -b "$1"' },
	{ mime = "application/octet-stream", run = 'piper -- file -b "$1"' },

	# Markdown with glow via piper
	{ name = "*.md", run = 'piper -- ~/go/bin/glow -s auto "$1"' },
	
	# DOC/DOCX files - convert to markdown and display with glow
	{ mime = "application/msword", run = 'piper -- (pandoc "$1" -t gfm --wrap=auto 2>/dev/null | ~/go/bin/glow -s auto) || (antiword "$1" 2>/dev/null | ~/go/bin/glow -s auto) || echo "Nelze načíst DOC soubor"' },
	{ mime = "application/vnd.openxmlformats-officedocument.wordprocessingml.document", run = 'piper -- (pandoc "$1" -t gfm --wrap=auto 2>/dev/null | ~/go/bin/glow -s auto) || echo "Nelze načíst DOCX soubor"' },
	{ name = "*.doc", run = 'piper -- (pandoc "$1" -t gfm --wrap=auto 2>/dev/null | ~/go/bin/glow -s auto) || (antiword "$1" 2>/dev/null | ~/go/bin/glow -s auto) || echo "Nelze načíst DOC soubor"' },
	{ name = "*.docx", run = 'piper -- (pandoc "$1" -t gfm --wrap=auto 2>/dev/null | ~/go/bin/glow -s auto) || echo "Nelze načíst DOCX soubor"' },
	
	# Archive previewer
	{ mime = "application/*zip",            run = "ouch" },
	{ mime = "application/x-tar",           run = "ouch" },
	{ mime = "application/x-bzip2",         run = "ouch" },
	{ mime = "application/x-7z-compressed", run = "ouch" },
	{ mime = "application/x-rar",           run = "ouch" },
	{ mime = "application/vnd.rar",         run = "ouch" },
	{ mime = "application/x-xz",            run = "ouch" },
	{ mime = "application/xz",              run = "ouch" },
	{ mime = "application/x-zstd",          run = "ouch" },
	{ mime = "application/zstd",            run = "ouch" },
	{ mime = "application/java-archive",    run = "ouch" },

	# Debian packages - show package info and contents
	{ mime = "application/vnd.debian.binary-package", run = 'piper -- dpkg-deb -I "$1" && echo "\\n--- Contents ---" && dpkg-deb -c "$1"' },
	{ name = "*.deb", run = 'piper -- dpkg-deb -I "$1" && echo "\\n--- Contents ---" && dpkg-deb -c "$1"' },
	
	# ZSync files - show metadata
	{ name = "*.zsync", run = 'piper -- head -20 "$1" | grep -E "^[A-Za-z-]+:" || file -b "$1"' },

	# Directory previewer  
	{ name = "*/", run = 'piper -- eza -TL=3 --color=always --icons=always --group-directories-first --no-quotes "$1"' },

]

# Binary files fallback - show file info instead of bat warnings
append_previewers = [
	# Binary files fallback - show file info instead of bat warnings
	{ name = "*", run = 'piper -- (file -b "$1" | grep -qi "text\\|script\\|source" && bat -p --color=always "$1" || file -b "$1")' },
]
